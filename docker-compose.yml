version: "3.4"
services:
  mongo:
    image: mongo:bionic
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - db-data-mongo:/data/bin:rw

  db:
    image: postgres:alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: app
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
    volumes:
      - db-data:/var/lib/postgresql/data:rw
  
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  server_backoffice:
    image: node:alpine3.10
    depends_on:
      - db
      - mongo
    ports:
      - 3001:3000
    environment:
      PORT: 3000
      MONGO_URL: "mongodb://root:password@mongo:27017/app"
      DATABASE_URL: "postgres://root:password@db:5432/app"
      JWT_SECRET: "THIS_IS_A_SECRET"
      CONVERTER_RATE_API_KEY: "e92a8080144940310b62cd6113fb28e4"
    volumes:
      - ./server_backoffice:/home/node/app
    working_dir: /home/node/app
    command: sh -c "npm start --no-update-notifier"

  server_psp:
    image: node:alpine3.10
    ports:
      - 3003:3000
    environment:
      PORT: 3000
    volumes:
      - ./server_psp:/home/node/app
    working_dir: /home/node/app
    command: sh -c "npm start --no-update-notifier"

  server_seller:
    image: node:alpine3.10
    ports:
      - 3004:3000
    environment:
      PORT: 3000
    volumes:
      - ./server_seller:/home/node/app
    working_dir: /home/node/app
    command: sh -c "npm start --no-update-notifier"

  client_backoffice:
    image: node:alpine3.10
    ports:
      - 3000:3000
    environment: { }
    volumes:
      - ./client_backoffice:/home/node/app
    working_dir: /home/node/app
    command: sh -c "yarn install --no-update-notifier; yarn start --no-update-notifier"

  client_seller:
    image: node:alpine3.10
    ports:
    - 3002:3000
    volumes:
      - ./client_seller:/home/node/app
    working_dir: /home/node/app
    command: sh -c "yarn install --no-update-notifier; yarn start --no-update-notifier"

volumes:
  db-data: {}
  db-data-mongo: {}